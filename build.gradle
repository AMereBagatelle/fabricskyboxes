plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id 'io.github.juuxel.loom-quiltflower' version '1.7.2'
}

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+mc${project.minecraft_version}${getSnapshotLabel()}"
group = project.maven_group

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

repositories {
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url "https://maven.flashyreese.me/releases"
    }
    maven {
        url "https://maven.flashyreese.me/snapshots"
    }
    maven {
        url "https://maven.terraformersmc.com/releases"
    }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    compileOnly "com.google.code.findbugs:jsr305:3.0.2"

    modRuntimeOnly "maven.modrinth:lazydfu:0.1.3"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    /*modRuntimeOnly("me.flashyreese.mods:fabricskyboxes-interop:1.1.2+mc1.19.2-build.21") {
        exclude group: "io.github.amerebagatelle", module: "fabricskyboxes"
        exclude group: "maven.modrinth", module: "fabricskyboxes"
        //exclude group: "com.terraformersmc", module: "modmenu"
    }*/

    testmodImplementation sourceSets.main.output
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.set 17
}

java {
    withSourcesJar()
}

jar {
    from "LICENSE"
}

runClient {
    classpath(sourceSets.testmod.runtimeClasspath)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "FlashyReeseSnapshots"
            url = "https://maven.flashyreese.me/snapshots"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

static def getSnapshotLabel() {
    def snapshot = System.getenv("SNAPSHOT")

    // CI builds only
    if (snapshot != null) {
        return "-SNAPSHOT"
    }
    return ""
}