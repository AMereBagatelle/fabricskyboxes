plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'io.github.juuxel.loom-quiltflower' version '1.7.2'
    id "com.modrinth.minotaur" version "2.+"
}

archivesBaseName = project.archives_base_name + "-" + project.minecraft_version
version = project.mod_version
group = project.maven_group

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

repositories {
    maven {
        name = "JitPack"
        url = "https://jitpack.io"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    mavenCentral()
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // fabric api resource loader
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    compileOnly "com.google.code.findbugs:jsr305:3.0.2"

    modRuntimeOnly "maven.modrinth:lazydfu:0.1.2"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    testmodImplementation sourceSets.main.output
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release.set 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from "LICENSE"
}

runClient {
    classpath(sourceSets.testmod.runtimeClasspath)
}

modrinth {
    token = System.getenv('MODRINTH_TOKEN')
    projectId = 'YBz7DOs8'
    versionName = "${project.archives_base_name} ${project.version}"
    versionNumber = project.version
    changelog = System.getenv('CHANGELOG_BODY')
    versionType = 'RELEASE'
    uploadFile = remapJar
    gameVersions = ["${project.minecraft_version}"]
    loaders = ["fabric"]
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}